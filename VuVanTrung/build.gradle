plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Lombok for code generation
//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok:1.18.30' // Use latest version
    annotationProcessor 'org.projectlombok:lombok:1.18.30' // Use latest version

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Use SLF4J with Logback as the logging backend
    implementation 'org.slf4j:slf4j-api:2.0.9'  // Latest SLF4J API
    implementation 'ch.qos.logback:logback-classic:1.4.12'  // Latest Logback

    // Database runtime dependencies
//    implementation 'mysql:mysql-connector-java:8.2.0'
//    runtimeOnly 'mysql:mysql-connector-java:8.1.0'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    implementation 'mysql:mysql-connector-java:8.0.32'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
//    implementation 'org.springframework:spring-security-jwt'


    implementation 'io.jsonwebtoken:jjwt:0.9.1' // For JWT handling

    // Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

// Optional: If you want to use validation annotations like @NotBlank, @Email, etc.
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

// Optional: Bean validation requires an EL implementation.
    implementation 'org.glassfish:jakarta.el:4.0.2'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-logging'

//    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Optional: Checker Framework if needed
    // implementation 'org.checkerframework:checker:3.40.0' // Uncomment if needed
    // annotationProcessor 'org.checkerframework:checker:3.40.0' // Uncomment if needed
}

// JUnit Platform for testing
tasks.named('test') {
    useJUnitPlatform()
}
